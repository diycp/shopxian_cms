<?php 
    namespace lib\base;  use think\Db;  header('Content-type: text/html; charset=utf-8');  set_time_limit(0);  class mysqlbase   extends \think\Controller{      public function ceshi(){          $return=Db::execute("SHOW CREATE TABLE  onethink_file");          return $return;      }            public function table_fieldDel($table_name,$field_name){          if($table_name!=false&&$field_name!=false){              try {                  Db::execute("ALTER TABLE `$table_name` DROP `$field_name`;");              } catch (Exception $exc) {                  exit($table_name.'表字段'.$field_name.'删除失败'.$exc->getTraceAsString());              }          }               }                  public function table_sql($table_name){          $return=Db::execute("SHOW CREATE TABLE  $table_name");          return $return;      }                        public function table_Stru($table_name){          $desc=Db::execute("SHOW FULL FIELDS FROM   $table_name");          return $desc;      }            public function table_index($table_name){          $index=Db::execute("show index from `$table_name`");          return $index;      }            public function select_tableDetails($tableName){          $sql="show table status where name='$tableName';";          $desc=Db::execute($sql);          return $desc;      }            public function table_create($arr){          $sql_str=$this->table_kv($arr);          if($sql_str!=false&&  is_array($sql_str)){              foreach($sql_str as $k=>$v){                  $return=Db::execute("SHOW CREATE TABLE  $k");                  if($return==false){                      $sql=$this->create_sql($k, $v);                     $ok=Db::execute($sql);                      if(Db::execute("SHOW CREATE TABLE  $k")){                          echo "成功创建表".$k."<br />\n";                      }else{                          exit($k.'建表失败'."<br />\n");                      }                  }else{                      $sql=$this->alert_sql($k, $v);                     $charaet=str_replace('DEFAULT CHARSET=', '', $v['stru'][0]['engine_charset']['charset']);                      $engine=$v['stru'][0]['engine_charset']['engine'];                      $sql=rtrim($sql, ',');                      $sql.=",ENGINE=".$engine.', DEFAULT CHARACTER SET='.$charaet;                      $ok=Db::execute($sql);                      echo "成功更新表".$k."<br />\n";                  }              }            }      }                  public function create_sql($k,$v){          $sql="CREATE TABLE `$k`(";          $index='';          foreach($v['stru'] as $k1=>$v1){              $sql.='`'.$v1['field_Name'].'`';              if($v1['index'][$v1['field_Name']]){                  $index.=','.$v1['index'][$v1['field_Name']];              }              if($v1['group_index'][$v1['field_Name']]){                  $index.=','.$v1['group_index'][$v1['field_Name']];              }              foreach($v1['parameter'] as $k3=>$v3){                  if($v3!=''||$v3!=false){                      $sql.=' '.$v3;                  }              }              $sql.=',';          }          $sql=  rtrim($sql, ',');          $sql.=$index.')'.$v['engine'];          return $sql;      }                  public function alert_sql($k,$v){          $sql="ALTER TABLE  `$k`";                   $aged_stru=$this->table_Stru($k);          $select_groupIndex=$this->table_index($k);          $aged_fieldName=array();          foreach($aged_stru as $k11=>$v11){              $aged_fieldName[]=$v11['field'];              foreach($select_groupIndex as $k22=>$v22){                  if($v22['column_name']==$v11['field']){                                                                $ifindex=$this->ifindex($aged_stru,$v22['key_name']);                     $index_arr=$this->returnIndex($select_groupIndex,$v22['key_name']);                      if($ifindex==false||$index_arr){                          $index_arr=$this->returnIndex($select_groupIndex,$v22['key_name']);                          $aged_stru[$k11]['index_name']=$v22['key_name'];                          if(count($index_arr)<=1){                              $aged_stru[$k11]['index_value']=$index_arr[0];                          }else{                              $aged_stru[$k11]['index_value']=$index_arr;                          }                      }                  }              }          }          $aged_field_Name=array();          $aged_key=array();          $aged_val=array();          $ifDROP=array();          foreach($v['stru'] as $k1=>$v1){              $sorting='';              if(0==$k1){                  $sorting=' FIRST';              }else{                  $sorting=' AFTER `'.$v['stru'][$k1-1]['field_Name'].'`';              }              $str='';              foreach($aged_stru as $k6=>$v6){                  if($v6['field']==$v1['field_Name']){                      $str.=' CHANGE COLUMN `'.$v1['field_Name'].'`'.' `'.$v1['field_Name'].'`';                  }                  $aged_field_Name[$k6]=$v6['field'];                  $aged_key[$k6]=$v6['index_name'];                  $aged_val[$k6]=$v6['index_value'];                  ############只能判断一样的 在里面###########              }                                        if(!in_array($v1['field_Name'], $aged_field_Name)){                  $sql.=' ADD COLUMN  `'.$v1['field_Name'].'`';              }                           $new_field=array();              $new_lieindex=array();             $new_grouplieindex=array();             foreach($v['stru'] as $k10=>$v10){                  $new_field[]=$v10['field_Name'];                  if($v10['key']!=false){                      $new_lieindex[]=$v10['field_Name'];                  }                  if($v10['group_key']['name']!=false&&$v10['group_key']['value']!=false){                      $new_grouplieindex[]=$v10['group_key']['name'];                  }              }              foreach($aged_field_Name as $k11=>$v11){                  if(!in_array($v11, $new_field)&&!in_array($v11, $ifDROP)){                      $sql.=' DROP `'.$v11.'`,';                      $ifDROP[]=$v11;                                       }              }                                          $new_lineindex=array();             $new_groupindex=array();             $aged_key=array_filter($aged_key);                           if($v1['key']&&in_array($v1['field_Name'], $aged_key)){                                   $iii=0;                  foreach($aged_key as $k7=>$v7){                      if($v7==$v1['field_Name']){                          $iii=$k7;                          break;                      }                  }                                   foreach($aged_key as $k12=>$v12){                      if(is_array($aged_val[$k12])==false&&$v12!=false){                          $new_lineindex[]=$v12;                      }else if(is_array($aged_val[$k12])&&$v12!=false){                          $new_groupindex[]=$v12;                      }                  }                                   if(is_array($aged_val[$iii])==false){                                           unset($aged_key[$iii]);                      unset($aged_val[$iii]);                      unset($aged_field_Name[$iii]);                  }                                }else if($v1['key']&&!in_array($v1['field_Name'], $aged_key)){                 $index.='ADD '.$v1['index'][$v1['field_Name']].',';             }else if($v1['key']==false&&in_array($v1['field_Name'], $aged_key)){                  if(is_numeric(strpos($index,' DROP INDEX `'.$v1['field_Name'].'`,'))==false){                          $index.=' DROP INDEX `'.$v1['field_Name'].'`,';                  }              }                                         foreach ($new_lineindex as $k13 => $v13) {                  if(!in_array($v13, $new_lieindex)){                      if(is_numeric(strpos($index,' DROP INDEX `'.$v13.'`,'))==false){                          $index.=' DROP INDEX `'.$v13.'`,';                      }                                       }              }                                                      if($v1['key']==false && in_array($v1['group_key']['name'], $aged_key)&&is_array($v1['group_key'])&&$v1['group_key']!=false){                                   $iii=0;                  foreach($aged_key as $k7=>$v7){                      if($v7==$v1['group_key']['name']){                          $iii=$k7;                          break;                      }                  }                  if(is_array($aged_val[$iii])&&$aged_val[$iii]==$v1['group_key']['value']){                                           unset($aged_key[$iii]);                      unset($aged_val[$iii]);                      unset($aged_field_Name[$iii]);                  }else if(is_array($aged_val[$iii])&&$v1['group_key']==false){                     $index.=' DROP INDEX `'.$aged_key[$iii].'`,';                      unset($aged_key[$iii]);                      unset($aged_val[$iii]);                      unset($aged_field_Name[$iii]);                  }else if($aged_val[$iii]!=$v1['group_key']['value']){                      $index.=' DROP INDEX `'.$aged_key[$iii].'`,';                      $index.=' ADD '.$v1['group_index'][$v1['field_Name']].',';                     unset($aged_key[$iii]);                      unset($aged_val[$iii]);                      unset($aged_field_Name[$iii]);                  }              }else if($v1['key']==false &&!in_array($v1['group_key']['name'], $new_groupindex)&&is_array($v1['group_key'])&&$v1['group_key']!=false){                      $group_index_vall=array_values($v1['group_index']);                      $index.=' ADD '.$group_index_vall[0].',';             }                            foreach ($new_groupindex as $k13 => $v13) {                  if(!in_array($v13, $new_grouplieindex)){                                           $indexstrs='DROP INDEX `'.$v13.'`,';                      if(is_numeric(strpos($index,$indexstrs))==false){                          $index.=$indexstrs;                      }                  }              }                           $sql.=$str;                           foreach($v1['parameter'] as $k3=>$v3){                  if($v3!=''||$v3!=false){                      $sql.=' '.$v3;                  }              }              $sql.=$sorting.',';         }                   $index=  rtrim($index, ',');          $sql.=$index;          return $sql;      }            private function ifindex($arr,$keyname){          foreach($arr as $k=>$v){              if(isset($v['index_name'])&&$v['index_name']==$keyname){                 return true;             }          }          return false;      }            private function returnIndex($arr,$keyname){          $indexarr=array();          foreach($arr as $k=>$v){              if($keyname==$v['key_name']){                  $indexarr[]=$v['column_name'];              }          }          return $indexarr;      }            public function table_kv($arr){          $str_sql=array();          foreach($arr as $k=>$v){              $k=C('database.prefix').$k;              $sql_arr=array();              if($v['Engine']==false)exit ('没有设置存储引擎');              if($v['Charset']==false)exit ('没有设置字符集');              $str='';              foreach($v['Stru'] as $k1=>$v1){                  if(isset($v1['value'])&&is_array($v1['value'])){                      $v1['length']="'".implode("','", $v1['value'])."'";                  }                  if(!isset($v1['default']))$v1['default']='';                  if(!isset($v1['attribute']))$v1['attribute']='';                  if(!isset($v1['null']))$v1['null']='';                  if(!isset($v1['auto_increment']))$v1['auto_increment']='';                  if(!isset($v1['annotation']))$v1['annotation']='';                  if(!isset($v1['key']))$v1['key']='';                  if(!isset($v1['value']))$v1['value']='';                                   if($k1==false)exit("没有设置字段名");$field_name=$k1;                                   if($v1['type']==false)exit("没有设置字段名类型");                  if($v1['length']==false)exit("没有设置字段长度");$field_type=$v1['type'].'('.$v1['length'].')';                                   if(is_numeric($v1['default'])==false&&$v1['default']==false){$default='';}else{$default=' DEFAULT \''.$v1['default'].'\'';}                  if($v1['value']!=false)$default='';                                   if($v1['attribute']==false){$attribute='';}else{$attribute=$v1['attribute'];}                                   if($v1['null']==false){$null=' NOT NULL';}else{$null=' NULL';}                                   if($v1['auto_increment']==false){$auto_increment='';}else{$auto_increment=' AUTO_INCREMENT';}                                   if($v1['annotation']==false){$annotation=' COMMENT \'\',';}else{$annotation=' COMMENT \''.$v1['annotation']."'";}                                   if($v1['key']==false){                      $key='';                                        }else{                      $kkey='';                      if($v1['key']!='Normal'){                          $kkey=$v1['key'];                      }                      $key=$kkey.' INDEX `'.$k1.'` (`'.$k1.'`)';                  }                                   if($v1['group_key']==false){                      $group_key='';                  }else{                      if($v1['group_key']['name']&&  is_array($v1['group_key']['value'])){                          if($v1['group_key']['key']==false||$v1['group_key']['key']=='Normal'){                              $group_val='';                              foreach($v1['group_key']['value'] as $groupk=>$groupv){                                  $group_val.='`'.$groupv.'`,';                              }                              $group_val=  rtrim($group_val, ',');                              $group_key='INDEX `'.$v1['group_key']['name'].'` ('.$group_val.')';                          }else{                              $group_val='';                              foreach($v1['group_key']['value'] as $groupk=>$groupv){                                  $group_val.='`'.$groupv.'`,';                              }                              $group_val=  rtrim($group_val, ',');                              $group_key=$v1['group_key']['key'].' INDEX `'.$v1['group_key']['name'].'` ('.$group_val.')';                          }                                                }else{                          $group_key='';                      }                  }                                   if(isset($v1['value'])&&$v1['value']==false){                      $value='';                  }else{                      if(isset($v1['value'])&&is_array($v1['value'])){                          $value='';                          foreach($v1['value'] as $k2=>$v2){                              $value.=$v2.',';                          }                          $value=  rtrim($value, ',');                      }else{                          $value='';                      }                  }                  if($v['Charset']==false){$charset='';}else{$charset=' DEFAULT CHARSET='.$v['Charset'];}                                                    $arr=array(                          'field_Name'=>$field_name,                          'parameter'=>array(                              $field_type,                              $default,                              $attribute,                              $null,                              $auto_increment,                              $annotation,                                                       ),                          'index'=>array(                              $field_name=>$key                          ),                          'engine_charset'=>array(                              'charset'=>$charset,                              'engine'=>$v['Engine']                          )                      );                  if($group_key){                      $arr['group_index']=array($field_name=>$group_key);                      $arr['group_key']['name']=$v1['group_key']['name'];                      $arr['group_key']['value']=$v1['group_key']['value'];                      $arr['group_key']['key']=$v1['group_key']['key'];                  }                  $arr['key']=$v1['key'];                  $sql_arr[]=$arr;              }              if($v['Charset']==false){$charset='';}else{$charset=' DEFAULT CHARSET='.$v['Charset'];}              $str=rtrim($str, ',');              $str_sql[$k]['stru']=$sql_arr;             $str_sql[$k]['engine']=' ENGINE='.$v['Engine'].$charset;          }          return $str_sql;      }            public function cite_delArr(&$arr,$str){          foreach($arr as $k=>$v){              if($str==$v){                  unset($arr[$k]);              }          }          $arr=  array_values($arr);      }  }