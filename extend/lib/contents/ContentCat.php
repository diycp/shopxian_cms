<?php 

           /**
            * 秀仙系统 shopxian_release/3.0.0
            * ============================================================================
            * * 版权所有 2017-2018 上海秀仙网络科技有限公司，并保留所有权利。
            * 网站地址: http://www.shopxian.com；
            * ----------------------------------------------------------------------------
            * 本软件只能免费使用  不允许对程序代码以任何形式任何目的再发布或者出售。
            * ============================================================================
            * 作者: 张启全 

            * 时间: 2018-03-11 16:08:53
            */
         namespace lib\contents;    class ContentCat {      public  function all(){          $tree_list_data=  appModel('contents', 'ContentsCat')->order('rank asc')->cache(1)->column('cat_name as tree_title,parent_id as tree_parent_id,permission,redirecturl,attribute,parent_id,channeltype_id,cat_id as id,parent_id,cat_id,cat_name','cat_id');          foreach ($tree_list_data as $key => $value) {              $tree_list_data[$key]['source_tree_title']=$value['tree_title'];              $tree_list_data[$key]['tree_title'].='&nbsp;[ID:'.$value['id'].']&nbsp;'.'&nbsp;[文档:<i class="contents_num" data-tree_id="'.$value['id'].'"></i>]&nbsp;';          }          return $tree_list_data;      }      public function allSonid($id){          $tree_list_data=  appModel('contents', 'ContentsCat')->order('rank asc')->cache(5)->column('parent_id,cat_id as id','cat_id');                   $son_id=$this->getson($tree_list_data,$id);          $this->son_id=[];          $son_id[$id]=$id;          $son_id= array_values($son_id);          return $son_id;      }        public function contentsCount($id){          $son_id=$this->allSonid($id);          $count=appModel('contents', 'Contents')->where('cat_id','in',$son_id)->cache(5)->count();          return $count;      }        protected $son_id=[];      protected function getson($data,$pid = 0){          foreach ($data as $key => $value) {              if($value['parent_id']==$pid){                  $this->son_id[$value['id']]=$value['id'];                  unset($data[$key]);                  $this->getson($data,$value['id']);              }           }          return $this->son_id;      }        static public function gettreeList($field='*'){          $cat= appModel('contents', 'ContentsCat')->order('rank asc')->cache(30)->column($field);          return self::treeList($cat);      }        static public $treeList = array();            static public function treeList(&$data,$pid = 0,$level = 0) {          foreach ($data as $key => $value){              if($value['parent_id']==$pid){                  $value['level'] = $level;                  $value['level_html'] = str_repeat('——| ', $level);                  self::$treeList [$value['cat_id']]=$value;                  unset($data[$key]);                  self::treeList($data,$value['cat_id'],$level+1);              }           }          return self::$treeList ;      }            public static function getSonCatInfo($cat_id,$where){          $cat=appModel('contents', 'ContentsCat')->where(['enabled'=>'true','parent_id'=>$cat_id])->order('rank asc')->limit(6)->cache(true)->column('cat_id,cat_name,parent_id');          $obj=appModel('contents', 'Contents');          foreach($cat as $k=>$v){              $cat[$k]['info']=$obj->where(['cat_id'=>$v['cat_id'],'enabled'=>'1'])->where($where)->cache(30)->column('content_id,title,use_platform');          }          return $cat;      }      protected $getParentCat=[];      public function getParentCat($id){          $data=appModel('contents', 'ContentsCat')->cache(3)->find($id);          $this->getParentCat[]=$data->getData();          if($data->getData('parent_id')!=0)$this->getParentCat ($data->getData('parent_id'));          krsort($this->getParentCat);          return array_values($this->getParentCat);      }  }  